% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/edid.R
\name{edid}
\alias{edid}
\title{Run the full efficient DiD modeling process}
\usage{
edid(
  dat,
  y_var,
  treat_time_var,
  id_var,
  time_var,
  num_t_pre,
  cluster_var = NULL,
  anticip = 0,
  get_attgt = TRUE,
  get_es = TRUE,
  get_cal = TRUE,
  get_full_mod = FALSE,
  biters = 1000,
  seed = 6
)
}
\arguments{
\item{dat}{A data frame with the data you want to model.}

\item{y_var}{A character string with the name of the outcome variable name
in the data frame.}

\item{treat_time_var}{A string with the name of a numeric variable in the
data frame that indicates the first period of treatment. Never treated
units should have a value of 0 on this variable.}

\item{id_var}{A string with the unit-level ID variable name in the
data frame. The variable can be numeric or character.}

\item{time_var}{A string with name of the numeric time variable in the
data frame.}

\item{num_t_pre}{An integer specifying the number of pre-treatment
periods to use for computing treatment effects.}

\item{cluster_var}{An optional string with the name of a variable in the
data frame to cluster standard errors on. \code{NULL} defaults to clustering at
the unit level. The variable can be numeric or character.}

\item{anticip}{An integer specifying the number of pre-treatment
anticipation periods. Treatment adoption will be re-defined as the first
anticipation period for modeling purposes. The treatment adoption period
will be re-aligned with the initial dataset when extracting results and
computing aggregated effects. The default is set to \code{0}.}

\item{get_attgt}{Boolean specifying whether to return the individual
efficient ATT(g,t) results. Default is \code{TRUE}.}

\item{get_es}{Boolean specifying whether to return event study results.
Default is \code{TRUE}.}

\item{get_cal}{Boolean specifying whether to return calendar time
aggregation results. Default is \code{TRUE}.}

\item{get_full_mod}{Boolean specifying whether to return the list with the
full set of model elements, including the individual ATT(g,t)s and
weights used to compute the efficient ATT(g,t)s. Default is \code{FALSE}.}

\item{biters}{An integer specifying number of bootstrap iterations to
perform.}

\item{seed}{An integer used to set the random seed for bootstrapping.}
}
\value{
The function will either return a data frame of the efficient DiD ATT
results, a list of full model elements, or a list containing both of these
pieces of output, with the data frame of results as element one and the
model elements list as element two, depending on the combination of
requested results.

The results data frame will be returned if any of \code{get_attgt}, \code{get_es}, or
\code{get_cal} are set to \code{TRUE}. The data frame will have a number of rows equal
to the total number of ATT estimates among the requested results sets. The
data frame is the result of binding the rows of the data frames returned by
the \code{\link[=get_edid_results_attgt]{get_edid_results_attgt()}} and \code{\link[=get_edid_results_agg]{get_edid_results_agg()}} functions; see
their documentation for descriptions of the columns. One additional column,
\code{type}, will be added as the first column of the data frame indicating the
type of estimate (\code{attgt}, \code{es} or \code{cal}).

The list of full model elements is the output of the \code{\link[=estimate_edid_model]{estimate_edid_model()}}
function; see that function's documentation for a description of the output.
}
\description{
This runs the entire efficient DiD process from the data setup to the
extraction of final results. It runs each individual package function under
the hood and returns the data frames produced by the
\code{\link[=get_edid_results_attgt]{get_edid_results_attgt()}} and \code{\link[=get_edid_results_agg]{get_edid_results_agg()}} functions, the full
set of model elements produced by \code{\link[=estimate_edid_model]{estimate_edid_model()}}, or both.
}
\details{
Note that the list of model elements returned by setting
\code{get_full_mod = TRUE} does not include the Ytilde or influence function
values for each unit. To obtain those, run \code{\link[=get_ytilde]{get_ytilde()}} or
\code{\link[=get_influence_func]{get_influence_func()}} on a data frame prepared with \code{\link[=prep_edid_data]{prep_edid_data()}}.
}
\examples{
# Return the efficient ATT(g,t)s, event study, and calendar
# time aggregated results.
edid_res <- edid(
  edid_ex_data,
  y_var = "outcome",
  treat_time_var = "treat_adopt_time",
  id_var = "id",
  time_var = "time",
  num_t_pre = 3
)

# Return the event study results only
edid_res_all <- edid(
  edid_ex_data,
  y_var = "outcome",
  treat_time_var = "treat_adopt_time",
  id_var = "id",
  time_var = "time",
  num_t_pre = 3,
  get_attgt = FALSE,
  get_cal = FALSE
)

# Return the ATT(g,t) data frame and the full model results
edid_res_all <- edid(
  edid_ex_data,
  y_var = "outcome",
  treat_time_var = "treat_adopt_time",
  id_var = "id",
  time_var = "time",
  num_t_pre = 3,
  get_es = FALSE,
  get_cal = FALSE,
  get_full_mod = TRUE
)

# Get results with clustered standard errors
edid_res_all <- edid(
  edid_ex_data,
  y_var = "outcome",
  treat_time_var = "treat_adopt_time",
  id_var = "id",
  time_var = "time",
  num_t_pre = 3,
  cluster_var = "cluster"
)

# Specify an anticipation period
edid_res_all <- edid(
  edid_ex_data,
  y_var = "outcome",
  treat_time_var = "treat_adopt_time",
  id_var = "id",
  time_var = "time",
  num_t_pre = 2,
  anticip = 1
)
}
